name: Build WASM

on:
  push:
    branches:
      - master

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - uses: dtolnay/rust-toolchain@stable

    - name: Cache rust modules
      uses: Swatinem/rust-cache@v2.0.1
      with:
        cache-on-failure: true

    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: pkg-config libx11-dev libxi-dev libgl1-mesa-dev libasound2-dev
        version: 1.0

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test

  build_and_deploy:
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown

    - name: Cache rust modules
      uses: Swatinem/rust-cache@v2.0.1
      with:
        cache-on-failure: true
        shared-key: wasm

    - name: Build with cargo
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --bin demo --target wasm32-unknown-unknown --release

    - name: Prepare public folder
      run: |
        mkdir public
        cp target/wasm32-unknown-unknown/release/demo.wasm public/
        cp demo/index.html public/

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ./public

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
